<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-05T22:23:42 EDT" name="Default suite" finished-at="2023-06-05T22:24:57 EDT" duration-ms="74810">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.Run@4f32a3ad]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-06-05T22:23:42 EDT" name="Default test" finished-at="2023-06-05T22:24:57 EDT" duration-ms="74810">
      <class name="Runner.Run">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:Runner.Run@4f32a3ad]" started-at="2023-06-05T22:23:42 EDT" name="setUpClass" finished-at="2023-06-05T22:23:43 EDT" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@5f45bc8e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.Run@4f32a3ad]" started-at="2023-06-05T22:23:43 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-05T22:24:21 EDT" duration-ms="38122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Add New Customer"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Customer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.Run@4f32a3ad]" started-at="2023-06-05T22:24:21 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-05T22:24:34 EDT" duration-ms="13712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search Customer by Email"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Customer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.Run@4f32a3ad]" started-at="2023-06-05T22:24:34 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-05T22:24:48 EDT" duration-ms="13415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Search Customer by Name"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Customer"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.Run@4f32a3ad]" started-at="2023-06-05T22:24:48 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-05T22:24:54 EDT" duration-ms="6456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Sucessful Login With valid Credentials DDT"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.Run@4f32a3ad]" started-at="2023-06-05T22:24:54 EDT" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-06-05T22:24:57 EDT" duration-ms="2673" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Sucessful Login With valid Credentials DDT"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login"]]>
              </value>
            </param>
          </params>
          <exception class="junit.framework.AssertionFailedError">
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError
at junit.framework.Assert.fail(Assert.java:55)
at junit.framework.Assert.assertTrue(Assert.java:22)
at junit.framework.Assert.assertTrue(Assert.java:31)
at StepDefination.StepDef.page_title_should_be(StepDef.java:109)
at âœ½.Page Title should be "Dashboard / nopCommerce administration"(file:///C:/Users/kumar/eclipse-workspace/CucumberFramwork/./Features/LoginFeature.feature:23)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.Run@4f32a3ad]" started-at="2023-06-05T22:24:57 EDT" name="tearDownClass" finished-at="2023-06-05T22:24:57 EDT" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.Run -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
